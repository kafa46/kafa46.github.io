#!/usr/bin/env python
# coding: utf-8

# # A Foolish Consistency is the Hobgoblin of Little Minds

# - "A Foolish Consistency is the Hobgoblin of Little Minds"을 문자 그대로 번역하면 "어리석은 일관성은 리틀 마인드의 홉고블린이다." 이 된다. (구글 번역기)

# - Hobgoblin은 영국의 민담에서 나오는 요정의 일종. 가장 대중적으로 알려진 홉고블린은 《한여름 밤의 꿈》에 나오는 장난꾸러기 요정 퍽(Puck)이다.
# 
# ```{figure} https://bit.ly/3Hhc0X5
# ---
# width: 350px
# align: center
# name: pep8Table
# ---
# 홉고블린 이미지 (이미지 출처: [나무위키 홉고블린](https://bit.ly/3yZ9HVr))
# ```

# - "A Foolish Consistency is the Hobgoblin of Little Minds"은 영국 속담으로 "어리석은 고집은 소인배에게나 들러붙는 말성쟁이"라는 의미라고 한다. 주로 낡은 방식이나 사상을 고집하는 수구 정치인, 종교인, 학자들을 비난할때 쓰입니다. (참고문헌: 나무위키 [홉고블린](https://bit.ly/3JgzkWB))
# 
# - 파이썬 프로그래머로 볼 경우 과거의 방식을 고집하는 개발자에게 자주 나타나는 것이 어리석은 고집을 부리거나 과거 방식을 답습하는 것으로 해석할 수 있습니다.
# 
# - 다르게 표현한다면 새로운 효율성을 무시하고 과거의 습관만을 고집하는 개발자로 해석할 수도 있습니다.
# 
# - 프로그래머들에 대한 Top 10 계명 중 6가지를 정리한 블로그를 소개합니다.
# 
# - 한 번 읽어보는 것도 좋을 것 같습니다. 아래 링크를 참고하세요
#     - [Top 6 List of Programming Top 10 Lists](https://blog.codinghorror.com/top-6-list-of-programming-top-10-lists/)

# ## 파이썬 창시자인 귀도 반 로섬의 통찰(Insight)

# - 코드는 쓰는 것보다 훨씬 더 자주 읽힌다는 것입니다. 프로그래밍 과정에서 소스코드를 만드는 것보다는 소스코드가 만들어진 이후 읽히는 경우가 훨씬 많다는 것이 귀도의 생각이었습니다.
# - 처음 프로그래밍(파이썬) 언어를 배우는 사람들은 아마도 감이 안잡히는 표현일 수 있습니다.
# - 하지만, 구현(코딩) 능력이 올라갈수록 **코드를 읽는 경우가 더 많다**라는 의미를 자연스럽게 깨닫게 될 것입니다.
# - 이러한 표현은 [PEP 20](https://www.python.org/dev/peps/pep-0020/) 'The Zen of Python' (파이썬의 선(禪))에서 언급한 바와 맥락이 같습니다.
# 

# ## 어차피 결론은 가독성(Readability)

# - 파이썬을 처음 공부하는 사람들은 잘 느끼지 못할 수도 있지만, 가독성은 코딩에 있어서 매우 중요한 요소입니다.
# 
# - 가독성의 중요성은 여러가지가 있지만 대표적인 것들을 정리하면 다음과 같습니다.
# 
# ```{admonition} 가독성이 중요한 경우
# ---
# class: tip
# ---
# 대부분의 프로그램 개발은 다양한 기능으로 분할하고 개발자별로 담당 기능을 구현한다.
# 
# 단위 기능 구현이 끝나면 통합하고 테스트하여 하나의 프로그램을 완성한다.
# 
# 다른 팀원으로 코드를 받았는데 해석이 어려운 경우가 있다.
# 
# 물론 내 코드를 전달해 줬는데 어떤 로직인지 파악하기 힘들어 하는 경우도 있다.
# 
# 여러 기능을 통합했더니 코딩 스타일이 중구난방이어서 일관성을 찾기 힘들다.
# 
# 개발이 끝난 코드를 유지보수 업체에 넘겼는데 코드 해석이 어렵다는 질문이 계속 날아온다.
# ```

# - PEP 8은 코딩 스타일에 대한 통일성을 추구하기 위한 제안서입니다.
# - 특정 프로젝트에서 코딩의 일관성(consistency)의 중요성은 매우 큽니다.
# - 특히 단일 모듈(module)이나 함수(function)에서의 일관성은 매우 중요합니다.

# - 하지만, 일관성이 없는 코드를 발견한 경우 PEP 8에서 추천하는 코딩 스타일을 정확하게 적용하기 어려운 경우도 있습니다.
# - 이런 경우에는 여러분 각자가 다른 샘플을 찾아보고 최선이라고 생각하는 것을 적용해야 합니다.
# - 제발 모르면 물어보는 것을 주저하지 말도록 합시다!

# ```{note} 이전 버전과의 호환성
# PEP 8에서 추천하는 코딩 스타일을 최대한 따라야 하지만, 이전 버전의 Python에서 제공하던 스타일과의 일관성을 완전히 무시해서는 안된다는 점을 기억하자.
# ```

# ## 코딩 스타일을 무시해야 하는 경우

# - 일관된 코딩 스타일을 유지해야 하는 수많은 이유가 있지만,
# - PEP 8의 권고사항을 준수하지 말아야 하는 경우도 있습니다.
# - 그 중에서 PEP 8에서 명시적으로 기록한 내용을 정리하면 다음과 같습니다.
# 
# ```{admonition} 파이썬 코딩 스타일을 무시해야 하는 상황(가이드라인)
# 1. 코드를 분석하는 사람들이 PEP에 익숙하다 하더라도, PEP 8을 준수했는데 가독성이 떨어지는 경우
# 
# 2. 여러분이 작성한 코드를 감싸는 다른 코딩 환경 때문에 가독성이 떨어지는 경우
# 
# 3. 여러분이 확보한 코드가 PEP 8 이전에 작성되었고, 굳이 수정하지 않아도 되는 경우
# 
# 4. PEP 8을 준수하지 않는 이전 스타일로 작성되었지만, PEP 8에서 지원하지 않는 코딩 스타일을 가지고 있는 경우
# ```

# ---
